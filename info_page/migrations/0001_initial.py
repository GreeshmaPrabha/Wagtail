# Generated by Django 5.0.7 on 2024-10-10 06:35

import django.db.models.deletion
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0093_uploadedfile'),
        ('wagtailimages', '0026_delete_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogLinkPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('seo_type', models.CharField(blank=True, help_text='SEO Type', max_length=255)),
                ('seo_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('canonical_url', models.CharField(blank=True, help_text='Canonical URL for this page', max_length=255)),
                ('og_title', models.CharField(blank=True, help_text='Optional. Alternative text for the OG title.', max_length=255)),
                ('og_description', models.CharField(blank=True, help_text='Optional. Alternative text for the OG description.', max_length=255)),
                ('banner_heading', models.CharField(default='', help_text='Banner heading', max_length=250, verbose_name='Banner heading')),
                ('banner_subheading', models.CharField(blank=True, default='', help_text='Banner sub heading', max_length=250, null=True, verbose_name='Banner sub heading')),
                ('banner_description', wagtail.fields.RichTextField(blank=True, help_text='Banner description', verbose_name='Banner description')),
                ('content', wagtail.fields.StreamField([('partner_page_list_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('sub_heading', wagtail.blocks.CharBlock(help_text='Add sub heading', required=False)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Base Blocks')), ('base_text_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Base Blocks')), ('about_us_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True))], group='Base Blocks')), ('team_list_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('name', wagtail.blocks.CharBlock(help_text='Add your name', required=True)), ('designation', wagtail.blocks.CharBlock(help_text='Add your designation', required=True))], group='Swiper Blocks')), ('team_description_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('name', wagtail.blocks.CharBlock(help_text='Add your name', required=True)), ('designation', wagtail.blocks.CharBlock(help_text='Add your designation', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Card Blocks')), ('agent_list_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('name', wagtail.blocks.CharBlock(help_text='Add your name', required=True)), ('designation', wagtail.blocks.CharBlock(help_text='Add your designation', required=True)), ('whatsapp_no', wagtail.blocks.CharBlock(help_text='Add your whatsapp number', required=True)), ('mobile_no', wagtail.blocks.CharBlock(help_text='Add your contact number', required=True)), ('email', wagtail.blocks.EmailBlock(help_text='Add your email', required=False))], group='Card Blocks')), ('value_list_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('icon', wagtail.images.blocks.ImageChooserBlock(required=True))], group='Card Blocks')), ('agent_description_block', wagtail.blocks.StructBlock([('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Card Blocks')), ('contact_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('whatsapp_no', wagtail.blocks.CharBlock(help_text='Add your whatsapp number', required=True)), ('mobile_no', wagtail.blocks.CharBlock(help_text='Add your contact number', required=True))], group='Base Blocks')), ('podcast_block', wagtail.blocks.StructBlock([('video', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('video_source', wagtail.blocks.ChoiceBlock(choices=[('upload', 'Upload Video'), ('external', 'External Video Link')], help_text='Choose whether to upload a video or provide an external link.', label='Video Source')), ('uploaded_video', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a video file (MP4, MOV, AVI, or WebM)', label='Upload Video', required=False)), ('external_video_link', wagtail.blocks.URLBlock(help_text='Paste the URL of an external video (e.g., YouTube, Vimeo)', label='External Video Link', required=False)), ('watch_time', wagtail.blocks.IntegerBlock(help_text='Estimated time to watch/read the content.', label='Watch Time (minutes)', required=True)), ('proficiency_level', wagtail.blocks.ChoiceBlock(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], help_text='Select the difficulty level.', label='Proficiency Level')), ('thumbnail', wagtail.images.blocks.ImageChooserBlock(help_text='Choose a thumbnail image for the video.', label='Thumbnail Image')), ('link_label', wagtail.blocks.CharBlock(help_text='The text for the link button.', label='Link Label', max_length=50, required=False))]), help_text='Add multiple video cards to this section', label='Add text card')), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks')), ('link_block', wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))], group='Card Blocks')), ('career_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('location', wagtail.blocks.CharBlock(help_text='Add your location', required=True)), ('time', wagtail.blocks.CharBlock(help_text='Posted time', required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks')), ('event_awards_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks')), ('text_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Card Block')), ('market_trend_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Block')), ('video_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('video_source', wagtail.blocks.ChoiceBlock(choices=[('upload', 'Upload Video'), ('external', 'External Video Link')], help_text='Choose whether to upload a video or provide an external link.', label='Video Source')), ('uploaded_video', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a video file (MP4, MOV, AVI, or WebM)', label='Upload Video', required=False)), ('external_video_link', wagtail.blocks.URLBlock(help_text='Paste the URL of an external video (e.g., YouTube, Vimeo)', label='External Video Link', required=False)), ('watch_time', wagtail.blocks.IntegerBlock(help_text='Estimated time to watch/read the content.', label='Watch Time (minutes)', required=True)), ('proficiency_level', wagtail.blocks.ChoiceBlock(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], help_text='Select the difficulty level.', label='Proficiency Level')), ('thumbnail', wagtail.images.blocks.ImageChooserBlock(help_text='Choose a thumbnail image for the video.', label='Thumbnail Image')), ('link_label', wagtail.blocks.CharBlock(help_text='The text for the link button.', label='Link Label', max_length=50, required=False))], group='Card Block')), ('report_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Block')), ('news_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Block')), ('media_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks'))])),
                ('banner_header_image', models.ForeignKey(blank=True, help_text='Banner image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Banner Image')),
                ('og_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Blog Link Page',
                'verbose_name_plural': 'Blog Link Pages',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('seo_type', models.CharField(blank=True, help_text='SEO Type', max_length=255)),
                ('seo_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('canonical_url', models.CharField(blank=True, help_text='Canonical URL for this page', max_length=255)),
                ('og_title', models.CharField(blank=True, help_text='Optional. Alternative text for the OG title.', max_length=255)),
                ('og_description', models.CharField(blank=True, help_text='Optional. Alternative text for the OG description.', max_length=255)),
                ('banner_heading', models.CharField(default='', help_text='Banner heading', max_length=250, verbose_name='Banner heading')),
                ('banner_subheading', models.CharField(blank=True, default='', help_text='Banner sub heading', max_length=250, null=True, verbose_name='Banner sub heading')),
                ('banner_description', wagtail.fields.RichTextField(blank=True, help_text='Banner description', verbose_name='Banner description')),
                ('content', wagtail.fields.StreamField([('partner_page_list_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('sub_heading', wagtail.blocks.CharBlock(help_text='Add sub heading', required=False)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Base Blocks')), ('base_text_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Base Blocks')), ('about_us_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True))], group='Base Blocks')), ('team_list_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('name', wagtail.blocks.CharBlock(help_text='Add your name', required=True)), ('designation', wagtail.blocks.CharBlock(help_text='Add your designation', required=True))], group='Swiper Blocks')), ('team_description_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('name', wagtail.blocks.CharBlock(help_text='Add your name', required=True)), ('designation', wagtail.blocks.CharBlock(help_text='Add your designation', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Card Blocks')), ('agent_list_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('name', wagtail.blocks.CharBlock(help_text='Add your name', required=True)), ('designation', wagtail.blocks.CharBlock(help_text='Add your designation', required=True)), ('whatsapp_no', wagtail.blocks.CharBlock(help_text='Add your whatsapp number', required=True)), ('mobile_no', wagtail.blocks.CharBlock(help_text='Add your contact number', required=True)), ('email', wagtail.blocks.EmailBlock(help_text='Add your email', required=False))], group='Card Blocks')), ('value_list_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('icon', wagtail.images.blocks.ImageChooserBlock(required=True))], group='Card Blocks')), ('agent_description_block', wagtail.blocks.StructBlock([('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Card Blocks')), ('contact_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('whatsapp_no', wagtail.blocks.CharBlock(help_text='Add your whatsapp number', required=True)), ('mobile_no', wagtail.blocks.CharBlock(help_text='Add your contact number', required=True))], group='Base Blocks')), ('podcast_block', wagtail.blocks.StructBlock([('video', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('video_source', wagtail.blocks.ChoiceBlock(choices=[('upload', 'Upload Video'), ('external', 'External Video Link')], help_text='Choose whether to upload a video or provide an external link.', label='Video Source')), ('uploaded_video', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a video file (MP4, MOV, AVI, or WebM)', label='Upload Video', required=False)), ('external_video_link', wagtail.blocks.URLBlock(help_text='Paste the URL of an external video (e.g., YouTube, Vimeo)', label='External Video Link', required=False)), ('watch_time', wagtail.blocks.IntegerBlock(help_text='Estimated time to watch/read the content.', label='Watch Time (minutes)', required=True)), ('proficiency_level', wagtail.blocks.ChoiceBlock(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], help_text='Select the difficulty level.', label='Proficiency Level')), ('thumbnail', wagtail.images.blocks.ImageChooserBlock(help_text='Choose a thumbnail image for the video.', label='Thumbnail Image')), ('link_label', wagtail.blocks.CharBlock(help_text='The text for the link button.', label='Link Label', max_length=50, required=False))]), help_text='Add multiple video cards to this section', label='Add text card')), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks')), ('link_block', wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))], group='Card Blocks')), ('career_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('location', wagtail.blocks.CharBlock(help_text='Add your location', required=True)), ('time', wagtail.blocks.CharBlock(help_text='Posted time', required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks')), ('event_awards_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks')), ('text_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False))], group='Card Block')), ('market_trend_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Block')), ('video_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Add your heading', required=True)), ('video_source', wagtail.blocks.ChoiceBlock(choices=[('upload', 'Upload Video'), ('external', 'External Video Link')], help_text='Choose whether to upload a video or provide an external link.', label='Video Source')), ('uploaded_video', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a video file (MP4, MOV, AVI, or WebM)', label='Upload Video', required=False)), ('external_video_link', wagtail.blocks.URLBlock(help_text='Paste the URL of an external video (e.g., YouTube, Vimeo)', label='External Video Link', required=False)), ('watch_time', wagtail.blocks.IntegerBlock(help_text='Estimated time to watch/read the content.', label='Watch Time (minutes)', required=True)), ('proficiency_level', wagtail.blocks.ChoiceBlock(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], help_text='Select the difficulty level.', label='Proficiency Level')), ('thumbnail', wagtail.images.blocks.ImageChooserBlock(help_text='Choose a thumbnail image for the video.', label='Thumbnail Image')), ('link_label', wagtail.blocks.CharBlock(help_text='The text for the link button.', label='Link Label', max_length=50, required=False))], group='Card Block')), ('report_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Block')), ('news_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Block')), ('media_block', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('posted_date', wagtail.blocks.CharBlock(help_text='Posted date', required=True)), ('description', wagtail.blocks.RichTextBlock(editor='default', help_text='Add additional text', required=False)), ('links', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(help_text='Enter the label of the link', required=False)), ('link_type', wagtail.blocks.ChoiceBlock(choices=[('internal', 'Internal Page'), ('external', 'External URL')], help_text='Select the type of link')), ('internal_page', wagtail.blocks.PageChooserBlock(help_text='Select an internal page', required=False)), ('external_url', wagtail.blocks.URLBlock(help_text='Enter an external URL', required=False))]), help_text='Add button/link information to this section', label='Add link details', max_num=1, min_num=0))], group='Card Blocks'))])),
                ('banner_header_image', models.ForeignKey(blank=True, help_text='Banner image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Banner Image')),
                ('og_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Content Page',
                'verbose_name_plural': 'Content Pages',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='InformationIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('seo_type', models.CharField(blank=True, help_text='SEO Type', max_length=255)),
                ('seo_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('canonical_url', models.CharField(blank=True, help_text='Canonical URL for this page', max_length=255)),
                ('og_title', models.CharField(blank=True, help_text='Optional. Alternative text for the OG title.', max_length=255)),
                ('og_description', models.CharField(blank=True, help_text='Optional. Alternative text for the OG description.', max_length=255)),
                ('og_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Information Index Page',
                'verbose_name_plural': 'Information Index Pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MultiplePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('seo_type', models.CharField(blank=True, help_text='SEO Type', max_length=255)),
                ('seo_keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('canonical_url', models.CharField(blank=True, help_text='Canonical URL for this page', max_length=255)),
                ('og_title', models.CharField(blank=True, help_text='Optional. Alternative text for the OG title.', max_length=255)),
                ('og_description', models.CharField(blank=True, help_text='Optional. Alternative text for the OG description.', max_length=255)),
                ('og_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Multiple Page',
                'verbose_name_plural': 'Multiple Pages',
            },
            bases=('wagtailcore.page',),
        ),
    ]
